/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mvisca-g <mvisca-g@student.42barcel>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/04/25 11:26:55 by mvisca-g          #+#    #+#             */
/*   Updated: 2023/05/08 18:36:00 by mvisca-g         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

static void	free_all(char **res, size_t i)
{
	size_t	j;

	j = 0;
	while (j < i)
	{
		free(res[j]);
		res[j++] = NULL;
	}
	free(res);
	res = NULL;
}
static char	**split_arr(char **res, char *s, char c)
{
	size_t	i;
	size_t	j;
	size_t	k;

	j = 0;
	i = -1;
	while (s[++i])
	{
		if (s[i] == c)
			continue ;
		k = 0;
		while (s[i + k] && s[i + k] != c)
			k++;
		res[j] = (char *) malloc (sizeof(char) * (k + 1));
		if (!res[j])
		{
			free_all(res, j);
			return (NULL);
		}
		res[j++] = ft_substr(s, i, k);
		i = i + k;
	}
	return (res);
}

static size_t	count_words(char *s, char c)
{
	size_t		count;
	size_t		i;

	count = 0;
	i = 0;
	while (s[i])
	{
		if (s[i++] == c)
			continue;
		count++;
		while (s[i] && s[i] != c)
			i++;
	}
	return (count);
}

char	**ft_split(const char *s, char c)
{
	char	**res;
	size_t	count;

	if (s == NULL)
		return (NULL);
	if (ft_strlen(s) == 0)
	{
		res = (char **) malloc (sizeof(char *) * 1);
		if (!res)
			return (NULL);
		res[0] = NULL;
		return (res);
	}
	count = count_words((char *)s, c);
	res = (char **) malloc (sizeof(char *) * (count + 1));
	if (res == NULL)
		return (NULL);
	split_arr(res, (char *)s, c);
	res[count] = NULL;
	return (res);
}
/*
int	main(void)
{
//	char	s1[] = "lorem euismod non, mi.";
	char	s1[] = "hoa dfasd sdf a";
	char	**res;
	int		i;
	char	c = ' ';

	res = ft_split(s1, c);
	i = 0;
	while (res[i])
	{
		printf ("%d=%s. \n", i, res[i]);
		i++;
	}
	printf ("NADA");
	return (0);
}*/