/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mvisca-g <mvisca-g@student.42barcel>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/04/25 11:26:55 by mvisca-g          #+#    #+#             */
/*   Updated: 2023/05/08 18:36:00 by mvisca-g         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

static int	count_words(char const *s, char c)
{
	int	i;
	int	words;

	i = 0;
	words = 0;
	while (s && s[i])
	{
		if (s[i] == c)
		{
			i++;
			continue ;
		}
		words++;
		while (s[i] != c)
			i++;
	}
	return (words);
}

static int	word_len(char const *s, char c, int i)
{
	int	len;

	len = 0;
	while (s[i++] != c)
		len++;
	return (len);
}

static void	free_all(char **res, int i)
{
	while (i-- > 0)
		free(res[i]);
	free(res);
	res = NULL;
}

char	**ft_split(char const *s, char c)
{
	char	**res;
	int		w_num;
	int		i;
	int		j;

	w_num = count_words(s, c);
	res = (char **)malloc(sizeof(char *) * (w_num + 1));
	if (!res)
		return (NULL);
	i = 0;
	j = -1;
	while (++j < w_num)
	{
		while (s[i] == c)
			i++;
		res[j] = ft_substr(s, i, word_len(s, c, i));
		if (!res)
		{
			free_all(res, j);
			return (NULL);
		}
		i = i + word_len(s, c, i);
	}
	res[j] = NULL;
	return (res);
}

int	main(int ac, char **av)
{
	char	**res;
	int		i;

	if (ac != 3)
		return (1);
	res = ft_split(av[1], av[2][0]);
	i = 0;
	while (res[i])
	{
		printf ("%d=%s. \n", i, res[i]);
		i++;
	}
	printf ("LEN=%d\n", i);
	free_all(res, i + 1);
	return (0);
}