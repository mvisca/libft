/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mvisca-g <mvisca-g@student.42barcel>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/04/25 11:26:55 by mvisca-g          #+#    #+#             */
/*   Updated: 2023/05/08 18:36:00 by mvisca-g         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

static void	free_all(char **res, int k)
{
	int	i;

	i = 0;
	if (!res)
		return ;
	while (i < k)
		free(res[i++]);
	free(res);
	res = NULL;
}

static void	copy_str(char *res, char *s, int i, int k)
{
	int	j;

	j = 0;
	while (j < k)
	{
		res[j++] = s[i++];
	}
	res[j] = 0;
}

static char	**split_str(char **res, char *s, char c)
{
	int	i;
	int	j;
	int	k;

	j = 0;
	i = -1;
	while (s[++i])
	{
		if (s[i] == c)
			continue ;
		k = 0;
		while (s[i + k] && s[i + k] != c)
			k++;
		res[j] = (char *) malloc (sizeof(char) * (k + 1));
		if (!res[j])
		{
			free_all(res, j);
			return (NULL);
		}
		copy_str(res[j++], s, i, k);
		i = i + k;
	}
	return (res);
}

static int	count_words(char *s, char c)
{
	int		count;
	int		i;

	count = 0;
	i = 0;
	while (s[i])
	{
		if (s[i++] == c)
			continue ;
		count++;
		while (s[i] && s[i] != c)
			i++;
	}
	return (count);
}

char	**ft_split(const char *s, char c)
{
	char	**res;
	int		count;

	if (s == NULL)
		return (NULL);
	count = count_words((char *)s, c);
	res = (char **) malloc(sizeof(char *) * (count + 1));
	if (!res)
		return (NULL);
	split_str(res, (char *)s, c);
	return (res);
}
/*
int	main(void)
{
	char	s[] = "tripoullie"; 
	int		i;
	char	c = 0;
	char	**res;

	printf ("main - default argument: %s, %c\n", s, c);
	
	res = ft_split(s, c);
	i = 0;
	while (res[i])
	{
		printf ("%d=%s$\n", i, res[i]);
		i++;
	}
	printf ("LEN=%d\n", i);
	return (0);
}
*/
